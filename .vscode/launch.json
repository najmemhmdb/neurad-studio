{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Launch Chrome against localhost",
      "request": "launch",
      "type": "chrome",
      "url": "http://localhost:4000",
      "webRoot": "${workspaceFolder}/nerfstudio/viewer/app"
    },
    {
      "name": "Python: Attach using Process ID",
      "type": "python",
      "request": "attach",
      "processId": "${command:pickProcess}",
      "justMyCode": true
    },
    {
      "name": "Python: Current File",
      "type": "python",
      "request": "launch",
      "program": "${file}",
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "Python: NeuRAD",
      "type": "python",
      "request": "launch",
      "program": "nerfstudio/scripts/train.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "neurad",
        "--pipeline.model.eval_num_rays_per_chunk=2048",
        "--pipeline.datamanager.num_processes=0",
        "--pipeline.datamanager.train-num-lidar-rays-per-batch=1280",
        "--pipeline.datamanager.eval-num-lidar-rays-per-batch=128",
        "--pipeline.datamanager.train_num_rays_per_batch=4096",
        "--pipeline.datamanager.eval_num_rays_per_batch=4096",
        "--pipeline.model.camera-optimizer.mode=SO3xR3",
        "pandaset-data",
        "--data=./data/pandaset",
        "--dataset_end_fraction=1.0",
        "--cameras=all"
      ]
    },
    {
      "name": "Python: NeuRAD tiny",
      "type": "python",
      "request": "launch",
      "program": "nerfstudio/scripts/train.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "neurad",
        "--pipeline.model.eval_num_rays_per_chunk=2048",
        "--pipeline.model.field.grid.static.hashgrid_dim=2",
        "--pipeline.model.field.grid.static.num_levels=4",
        "--pipeline.model.field.grid.static.log2_hashmap_size=15",
        "--pipeline.model.field.grid.actor.hashgrid_dim=2",
        "--pipeline.model.field.grid.actor.num_levels=2",
        "--pipeline.model.camera-optimizer.mode=SO3xR3",
        "--pipeline.model.field.grid.actor.log2_hashmap_size=11",
        "import logging
import torch
from typing import Optional, Union
from some_module import CameraLidarTemporalOptimizerConfig, CameraOptimizer, pose_utils, exp_map_SO3xR3, Int, Float  # Import necessary modules

# Set up basic logging configuration
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)",
        "--pipeline.datamanager.train-num-lidar-rays-per-batch=1280",
        "--pipeline.datamanager.eval-num-lidar-rays-per-batch=128",
        "--pipeline.datamanager.train-num-rays-per_batch=2048",
        "--pipeline.datamanager.eval-num-rays_per_batch=2048",
        "pandaset-data",
        "--data=./data/pandaset",
        "--dataset_end_fraction=0.2",
        "--cameras=all",
      ]
    },
    {
      "name": "Python: NeuRAD CPU",
      "type": "python",
      "request": "launch",
      "program": "nerfstudio/scripts/train.py",
      "console": "integratedTerminal",
      "justMyCode": false,
      "env": {"PYTORCH_ENABLE_MPS_FALLBACK": "1"},
      "args": [
        "neurad",
        "--pipeline.model.eval_num_rays_per_chunk=2048",
        "--pipeline.model.implementation=torch",
        "--pipeline.model.sampling.proposal_field_1.grid.actor.use_4d_hashgrid=False",
        "--pipeline.model.sampling.proposal_field_2.grid.actor.use_4d_hashgrid=False",
        "--pipeline.model.field.grid.actor.use_4d_hashgrid=False",
        "--machine.device-type=mps",
        "--mixed_precision=False",
        "--pipeline.datamanager.num_processes=0",
        "--pipeline.datamanager.train-num-lidar-rays-per-batch=128",
        "--pipeline.datamanager.eval-num-lidar-rays-per-batch=128",
        "--pipeline.datamanager.train_num_rays_per_batch=2048",
        "--pipeline.datamanager.eval_num_rays_per_batch=2048",
        "--vis=tensorboard",
        "pandaset-data",
        "--data=./data/pandaset",
        "--dataset_end_fraction=0.2",
        "--cameras=front"
      ]
    },
    {
      "name": "Python: Splatfacto PandaSet",
      "type": "python",
      "request": "launch",
      "program": "nerfstudio/scripts/train.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "splatfacto",
        "pandaset-data",
        "--sequence=028",
        "--data=./data/pandaset",
        "--dataset_end_fraction=1.0",
      ]
    },
  ]
}
